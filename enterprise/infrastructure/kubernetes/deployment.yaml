apiVersion: v1
kind: Namespace
metadata:
  name: sms-sm-enterprise
  labels:
    name: sms-sm-enterprise
    environment: production
    project: sms-sm
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: sms-sm-config
  namespace: sms-sm-enterprise
data:
  NODE_ENV: "production"
  API_VERSION: "v1"
  LOG_LEVEL: "info"
  CORS_ORIGIN: "https://app.sms-sm.health,https://admin.sms-sm.health"
  ENABLE_COMPRESSION: "true"
  ENABLE_RATE_LIMITING: "true"
  DEFAULT_LOCALE: "en-US"
  SUPPORTED_LOCALES: "en-US,pt-BR,es-ES,fr-FR,de-DE,it-IT,ja-JP,ko-KR,zh-CN,ar-SA"
---
apiVersion: v1
kind: Secret
metadata:
  name: sms-sm-secrets
  namespace: sms-sm-enterprise
type: Opaque
data:
  JWT_SECRET: <base64-encoded-jwt-secret>
  JWT_REFRESH_SECRET: <base64-encoded-jwt-refresh-secret>
  DATABASE_URL: <base64-encoded-database-url>
  REDIS_URL: <base64-encoded-redis-url>
  MONGODB_URL: <base64-encoded-mongodb-url>
  SENDGRID_API_KEY: <base64-encoded-sendgrid-key>
  AWS_ACCESS_KEY_ID: <base64-encoded-aws-access-key>
  AWS_SECRET_ACCESS_KEY: <base64-encoded-aws-secret-key>
  SENTRY_DSN: <base64-encoded-sentry-dsn>
  STRIPE_SECRET_KEY: <base64-encoded-stripe-secret>
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sms-sm-frontend
  namespace: sms-sm-enterprise
  labels:
    app: sms-sm-frontend
    tier: frontend
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: sms-sm-frontend
  template:
    metadata:
      labels:
        app: sms-sm-frontend
        tier: frontend
    spec:
      containers:
      - name: frontend
        image: sms-sm/frontend:2.0.0
        ports:
        - containerPort: 80
        env:
        - name: NODE_ENV
          valueFrom:
            configMapKeyRef:
              name: sms-sm-config
              key: NODE_ENV
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "200m"
        livenessProbe:
          httpGet:
            path: /health
            port: 80
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 80
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        securityContext:
          runAsNonRoot: true
          runAsUser: 1000
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
---
apiVersion: v1
kind: Service
metadata:
  name: sms-sm-frontend-service
  namespace: sms-sm-enterprise
  labels:
    app: sms-sm-frontend
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: 80
    protocol: TCP
  selector:
    app: sms-sm-frontend
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sms-sm-backend
  namespace: sms-sm-enterprise
  labels:
    app: sms-sm-backend
    tier: backend
spec:
  replicas: 5
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 2
      maxUnavailable: 1
  selector:
    matchLabels:
      app: sms-sm-backend
  template:
    metadata:
      labels:
        app: sms-sm-backend
        tier: backend
    spec:
      containers:
      - name: backend
        image: sms-sm/backend:2.0.0
        ports:
        - containerPort: 4000
        env:
        - name: NODE_ENV
          valueFrom:
            configMapKeyRef:
              name: sms-sm-config
              key: NODE_ENV
        - name: PORT
          value: "4000"
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: sms-sm-secrets
              key: DATABASE_URL
        - name: REDIS_URL
          valueFrom:
            secretKeyRef:
              name: sms-sm-secrets
              key: REDIS_URL
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: sms-sm-secrets
              key: JWT_SECRET
        - name: SENTRY_DSN
          valueFrom:
            secretKeyRef:
              name: sms-sm-secrets
              key: SENTRY_DSN
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 4000
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health/ready
            port: 4000
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        securityContext:
          runAsNonRoot: true
          runAsUser: 1001
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        - name: logs
          mountPath: /app/logs
      volumes:
      - name: tmp
        emptyDir: {}
      - name: logs
        emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: sms-sm-backend-service
  namespace: sms-sm-enterprise
  labels:
    app: sms-sm-backend
spec:
  type: ClusterIP
  ports:
  - port: 4000
    targetPort: 4000
    protocol: TCP
  selector:
    app: sms-sm-backend
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: sms-sm-backend-hpa
  namespace: sms-sm-enterprise
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: sms-sm-backend
  minReplicas: 5
  maxReplicas: 20
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 10
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 100
        periodSeconds: 15
      - type: Pods
        value: 2
        periodSeconds: 60
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: sms-sm-ingress
  namespace: sms-sm-enterprise
  annotations:
    kubernetes.io/ingress.class: "nginx"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/use-regex: "true"
    nginx.ingress.kubernetes.io/rate-limit: "100"
    nginx.ingress.kubernetes.io/rate-limit-window: "1m"
    nginx.ingress.kubernetes.io/cors-allow-origin: "https://app.sms-sm.health"
    nginx.ingress.kubernetes.io/cors-allow-methods: "GET, POST, PUT, DELETE, OPTIONS"
    nginx.ingress.kubernetes.io/cors-allow-headers: "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization"
spec:
  tls:
  - hosts:
    - app.sms-sm.health
    - api.sms-sm.health
    secretName: sms-sm-tls
  rules:
  - host: app.sms-sm.health
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: sms-sm-frontend-service
            port:
              number: 80
  - host: api.sms-sm.health
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: sms-sm-backend-service
            port:
              number: 4000