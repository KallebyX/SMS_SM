apiVersion: apps/v1
kind: Deployment
metadata:
  name: sms-sm-frontend
  namespace: sms-sm-enterprise
  labels:
    app: sms-sm-frontend
    component: frontend
    tier: presentation
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 50%
      maxUnavailable: 25%
  selector:
    matchLabels:
      app: sms-sm-frontend
  template:
    metadata:
      labels:
        app: sms-sm-frontend
        component: frontend
        tier: presentation
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "3000"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: sms-sm-service-account
      securityContext:
        runAsNonRoot: true
        runAsUser: 1001
        fsGroup: 1001
      containers:
      - name: frontend
        image: ghcr.io/your-org/sms-sm-enterprise/frontend:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 3000
          name: http
          protocol: TCP
        env:
        - name: NODE_ENV
          value: "production"
        - name: VITE_API_URL
          value: "https://api.sms-sm.health"
        - name: VITE_GRAPHQL_URL
          value: "https://api.sms-sm.health/graphql"
        - name: VITE_SOCKET_URL
          value: "https://api.sms-sm.health"
        envFrom:
        - configMapRef:
            name: frontend-config
        - secretRef:
            name: frontend-secrets
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 500m
            memory: 512Mi
        livenessProbe:
          httpGet:
            path: /health
            port: 3000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 3000
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 1001
          capabilities:
            drop:
            - ALL
        volumeMounts:
        - name: nginx-cache
          mountPath: /var/cache/nginx
        - name: nginx-run
          mountPath: /var/run
      volumes:
      - name: nginx-cache
        emptyDir: {}
      - name: nginx-run
        emptyDir: {}
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - sms-sm-frontend
              topologyKey: kubernetes.io/hostname
---
apiVersion: v1
kind: Service
metadata:
  name: sms-sm-frontend-service
  namespace: sms-sm-enterprise
  labels:
    app: sms-sm-frontend
    component: frontend
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-type: "nlb"
    service.beta.kubernetes.io/aws-load-balancer-backend-protocol: "http"
spec:
  type: LoadBalancer
  ports:
  - port: 80
    targetPort: 3000
    protocol: TCP
    name: http
  selector:
    app: sms-sm-frontend
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: frontend-config
  namespace: sms-sm-enterprise
  labels:
    app: sms-sm-frontend
data:
  VITE_ENABLE_ANALYTICS: "true"
  VITE_ENABLE_CHAT: "true"
  VITE_ENABLE_VIDEO_CALLS: "true"
  VITE_ENABLE_AI_ASSISTANT: "true"
  VITE_DEFAULT_LOCALE: "en-US"
  VITE_SUPPORTED_LOCALES: "en-US,pt-BR,es-ES,fr-FR,de-DE,it-IT,ja-JP,ko-KR,zh-CN,ar-SA"
---
apiVersion: v1
kind: Secret
metadata:
  name: frontend-secrets
  namespace: sms-sm-enterprise
  labels:
    app: sms-sm-frontend
type: Opaque
data:
  VITE_SENTRY_DSN: ""  # Base64 encoded
  VITE_GOOGLE_ANALYTICS_ID: ""  # Base64 encoded
  VITE_GOOGLE_MAPS_API_KEY: ""  # Base64 encoded