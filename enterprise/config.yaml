# SMS-SM Enterprise Platform Configuration

# Project Information
project:
  name: "SMS-SM Enterprise Platform"
  version: "2.0.0"
  description: "Enterprise-level multinational health management platform"
  repository: "https://github.com/your-org/sms-sm-enterprise"
  documentation: "https://docs.sms-sm.health"
  
# Environment Configuration
environments:
  development:
    api_url: "http://localhost:4000"
    frontend_url: "http://localhost:3000"
    database_url: "postgresql://postgres:postgres@localhost:5432/sms_sm_dev"
    redis_url: "redis://localhost:6379/0"
    log_level: "debug"
    
  staging:
    api_url: "https://api-staging.sms-sm.health"
    frontend_url: "https://staging.sms-sm.health"
    database_url: "${DATABASE_URL}"
    redis_url: "${REDIS_URL}"
    log_level: "info"
    
  production:
    api_url: "https://api.sms-sm.health"
    frontend_url: "https://app.sms-sm.health"
    database_url: "${DATABASE_URL}"
    redis_url: "${REDIS_URL}"
    log_level: "warn"

# Application Architecture
architecture:
  frontend:
    framework: "React 18"
    language: "TypeScript"
    styling: "Tailwind CSS"
    state_management: "Zustand"
    routing: "React Router"
    testing: "Vitest + Playwright"
    
  backend:
    framework: "Node.js + Express"
    language: "TypeScript"
    api: "GraphQL + REST"
    database: "PostgreSQL"
    cache: "Redis"
    messaging: "Apache Kafka"
    testing: "Vitest + Supertest"
    
  microservices:
    auth_service:
      port: 3001
      description: "Authentication and authorization"
      database: "PostgreSQL"
      
    user_service:
      port: 3002
      description: "User management and profiles"
      database: "PostgreSQL"
      
    health_service:
      port: 3003
      description: "Health records and clinical data"
      database: "PostgreSQL + MongoDB"
      
    notification_service:
      port: 3004
      description: "Email, SMS, and push notifications"
      queue: "Apache Kafka"

# Infrastructure Configuration
infrastructure:
  containerization:
    platform: "Docker"
    orchestration: "Kubernetes"
    registry: "GitHub Container Registry"
    
  cloud_providers:
    primary: "AWS"
    regions:
      - "us-east-1"
      - "eu-west-1"
      - "ap-southeast-1"
      - "sa-east-1"
      
  databases:
    postgresql:
      version: "15"
      instance_type: "db.r6g.xlarge"
      backup_retention: 30
      
    redis:
      version: "7"
      instance_type: "cache.r6g.large"
      cluster_enabled: true
      
    mongodb:
      version: "7"
      instance_type: "M30"
      replica_set: true

# Security Configuration
security:
  authentication:
    methods:
      - "JWT"
      - "OAuth 2.0"
      - "SAML 2.0"
      - "Multi-factor Authentication"
      
  authorization:
    model: "RBAC + ABAC"
    roles:
      - "super_admin"
      - "admin"
      - "manager"
      - "physician"
      - "nurse"
      - "patient"
      - "guest"
      
  compliance:
    standards:
      - "HIPAA"
      - "GDPR"
      - "LGPD"
      - "ISO 27001"
      - "SOX"
      
  encryption:
    at_rest: "AES-256"
    in_transit: "TLS 1.3"
    key_management: "AWS KMS"

# Monitoring and Observability
monitoring:
  metrics:
    collector: "Prometheus"
    visualization: "Grafana"
    retention: "90 days"
    
  logging:
    aggregation: "ELK Stack"
    retention: "6 months"
    level: "info"
    
  tracing:
    system: "Jaeger"
    sampling: "10%"
    retention: "7 days"
    
  alerting:
    channels:
      - "Slack"
      - "Email"
      - "PagerDuty"
      
  health_checks:
    interval: "30s"
    timeout: "5s"
    retries: 3

# Performance Configuration
performance:
  caching:
    levels:
      - "Browser Cache"
      - "CDN Cache"
      - "Application Cache"
      - "Database Cache"
      
  cdn:
    provider: "CloudFlare"
    regions: "Global"
    
  load_balancing:
    algorithm: "Round Robin"
    health_checks: true
    
  auto_scaling:
    min_replicas: 3
    max_replicas: 50
    target_cpu: 70
    target_memory: 80

# Internationalization
i18n:
  default_locale: "en-US"
  supported_locales:
    - "en-US"  # English (US)
    - "pt-BR"  # Portuguese (Brazil)
    - "es-ES"  # Spanish (Spain)
    - "es-MX"  # Spanish (Mexico)
    - "fr-FR"  # French (France)
    - "de-DE"  # German (Germany)
    - "it-IT"  # Italian (Italy)
    - "ja-JP"  # Japanese (Japan)
    - "ko-KR"  # Korean (South Korea)
    - "zh-CN"  # Chinese (Simplified)
    - "zh-TW"  # Chinese (Traditional)
    - "ar-SA"  # Arabic (Saudi Arabia)
    - "hi-IN"  # Hindi (India)
    - "ru-RU"  # Russian (Russia)
    - "nl-NL"  # Dutch (Netherlands)
    
  timezone_support: true
  currency_support: true
  rtl_support: true

# Feature Flags
features:
  ai_assistant: true
  telemedicine: true
  mobile_app: true
  voice_commands: true
  biometric_auth: true
  blockchain_records: false
  quantum_encryption: false

# Development Configuration
development:
  hot_reload: true
  source_maps: true
  debug_mode: true
  mock_external_apis: true
  
  testing:
    unit_tests: true
    integration_tests: true
    e2e_tests: true
    performance_tests: true
    security_tests: true
    
  code_quality:
    linting: true
    formatting: true
    type_checking: true
    security_scanning: true
    dependency_scanning: true

# Deployment Configuration
deployment:
  strategy: "Blue-Green"
  rollback: "Automatic on failure"
  environments:
    - "development"
    - "staging"
    - "production"
    
  ci_cd:
    platform: "GitHub Actions"
    triggers:
      - "push to main"
      - "push to develop"
      - "pull request"
      
  infrastructure_as_code:
    tool: "Terraform"
    state_backend: "S3"
    
  secrets_management:
    tool: "AWS Secrets Manager"
    rotation: "90 days"

# Business Configuration
business:
  supported_countries:
    - "United States"
    - "Canada"
    - "Brazil"
    - "Mexico"
    - "United Kingdom"
    - "Germany"
    - "France"
    - "Spain"
    - "Italy"
    - "Japan"
    - "South Korea"
    - "Australia"
    - "India"
    - "Saudi Arabia"
    - "South Africa"
    
  healthcare_standards:
    - "HL7 FHIR"
    - "DICOM"
    - "ICD-10"
    - "CPT"
    - "SNOMED CT"
    - "LOINC"
    
  compliance_regions:
    us: ["HIPAA", "FDA", "CMS"]
    eu: ["GDPR", "MDR", "IVDR"]
    brazil: ["LGPD", "ANVISA"]
    canada: ["PIPEDA", "Health Canada"]

# Maintenance and Support
maintenance:
  backup_schedule: "Daily at 2 AM UTC"
  backup_retention: "1 year"
  maintenance_window: "Sunday 2-4 AM UTC"
  
  support:
    hours: "24/7"
    languages: ["English", "Portuguese", "Spanish", "French"]
    channels: ["Email", "Chat", "Phone", "Ticket System"]
    sla:
      critical: "1 hour"
      high: "4 hours"
      medium: "1 business day"
      low: "3 business days"