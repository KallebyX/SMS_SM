version: '3.8'

services:
  # PostgreSQL Database
  database:
    image: postgres:15-alpine
    restart: unless-stopped
    environment:
      POSTGRES_DB: maternar_sm
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    ports:
      - "5432:5432"
    networks:
      - sms-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d maternar_sm"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    restart: unless-stopped
    command: redis-server --requirepass password --appendonly yes
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - sms-network
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

  # Backend API
  backend:
    build:
      context: ./enterprise/backend
      dockerfile: Dockerfile
      args:
        NODE_ENV: development
    restart: unless-stopped
    environment:
      NODE_ENV: development
      PORT: 4000
      DATABASE_URL: postgresql://postgres:password@database:5432/maternar_sm
      REDIS_URL: redis://default:password@redis:6379
      JWT_SECRET: maternar_sm_2024_super_secret_key_for_development
      JWT_EXPIRES_IN: 7d
      CORS_ORIGINS: http://localhost:3000,http://frontend:3000
    ports:
      - "4000:4000"
    depends_on:
      database:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - sms-network
    volumes:
      - ./enterprise/backend:/app
      - /app/node_modules
      - backend_logs:/app/logs
    command: npm run dev
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # Frontend Web App
  frontend:
    build:
      context: ./enterprise/frontend
      dockerfile: Dockerfile
    restart: unless-stopped
    ports:
      - "3000:3000"
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - sms-network
    volumes:
      - ./enterprise/frontend:/app
      - /app/node_modules
      - /app/dist
    command: npm run dev -- --host 0.0.0.0
    environment:
      VITE_API_URL: http://localhost:4000
      VITE_WS_URL: ws://localhost:4000

# Networks
networks:
  sms-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

# Volumes
volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  backend_logs:
    driver: local